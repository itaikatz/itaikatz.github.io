import json
import array 
import numpy as np
import scipy.optimize as opt
import matplotlib.pyplot as plt
from scipy.interpolate import UnivariateSpline

# Data from:
# https://www.census.gov/data/tables/time-series/dec/popchange-data-text.html
def getNationalBirthRate():
	year = [1910, 1915, 1920, 1925, 1930, 1935, 1940, 1945, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2009, 2012, 2020]
	per1000 = [30.1, 29.5, 27.7, 25.1, 21.3, 18.7, 19.4, 20.4, 24.1, 25.1, 25.1, 25.3, 25, 25.2, 25.3, 24.5, 24.3, 23.7, 23.3, 22.4, 21.7, 21, 19.4, 18.4, 17.8, 17.5, 17.8, 18.4, 17.2, 15.6, 14.9, 14.9, 14.8, 14.8, 15.4, 15.3, 15.9, 15.9, 15.9, 15.5, 15.5, 15.8, 15.5, 15.7, 15.9, 16.2, 16.7, 16.2, 16, 15.7, 15.3, 14.8, 14.7, 14.5, 14.6, 14.5, 14.7, 14.1, 13.9, 14.1, 14, 14, 13.8, 12.6, 11.0]

	print([x/1000 for x in per1000])
	spl = UnivariateSpline(year, [x/1000 for x in per1000])

	return spl

birth_rate_func = getNationalBirthRate()

# Data from:
# https://www.census.gov/data/tables/time-series/dec/popchange-data-text.html

# !!N.B. order of these states must mach the order in topo file
states = ['MA', 'WA', 'CA', 'OR', 'WI', 'ME', 'MI', 'NV', 'NM', 'CO', 'WY', 'KS', 'NE', 'OK', 'MO', 'IL', 'IN', 'VT', 'AR', 'TX', 'RI', 'AL', 'MS', 'NC', 'VA', 'IA', 'MD', 'DE', 'PA', 'NJ', 'NY', 'ID', 'SD', 'CT', 'NH', 'KY', 'OH', 'TN', 'WV', 'DC', 'LA', 'FL', 'GA', 'SC', 'MN', 'MT', 'ND', 'AZ', 'UT', 'HI', 'AK']
census = [[7029917,6547629,6349097,6016425,5737037,5689170,5148578,4690514,4316721,4249614,3852356,3366416],[7705281,6724540,5894121,4866692,4132156,3409169,2853214,2378963,1736191,1563396,1356621,1141990],[39538223,37253956,33871648,29760021,23667902,19953134,15717204,10586223,6907387,5677251,3426861,2377549],[4237256,3831074,3421399,2842321,2633105,2091385,1768687,1521341,1089684,953786,783389,672765],[5893718,5686986,5363675,4891769,4705767,4417731,3951777,3434575,3137587,2939006,2632067,2333860],[1362359,1328361,1274923,1227928,1124660,992048,969265,913774,847226,797423,768014,742371],[10077331,9883640,9938444,9295297,9262078,8875083,7823194,6371766,5256106,4842325,3668412,2810173],[3104614,2700551,1998257,1201833,800493,488738,285278,160083,110247,91058,77407,81875],[2117522,2059179,1819046,1515069,1302894,1016000,951023,681187,531818,423317,360350,327301],[5773714,5029196,4301261,3294394,2889964,2207259,1753947,1325089,1123296,1035791,939629,799024],[576851,563626,493782,453588,469557,332416,330066,290529,250742,225565,194402,145965],[2937880,2853118,2688418,2477574,2363679,2246578,2178611,1905299,1801028,1880999,1769257,1690949],[1961504,1826341,1711263,1578385,1569825,1483493,1411330,1325510,1315834,1377963,1296372,1192214],[3959353,3751351,3450654,3145585,3025290,2559229,2328284,2233351,2336434,2396040,2028283,1657155],[6154913,5988927,5595211,5117073,4916686,4676501,4319813,3954653,3784664,3629367,3404055,3293335],[12812508,12830632,12419293,11430602,11426518,11113976,10081158,8712176,7897241,7630654,6485280,5638591],[6785528,6483802,6080485,5544159,5490224,5193669,4662498,3934224,3427796,3238503,2930390,2700876],[643077,625741,608827,562758,511456,444330,389881,377747,359231,359611,352428,355956],[3011524,2915918,2673400,2350725,2286435,1923295,1786272,1909511,1949387,1854482,1752204,1574449],[29145505,25145561,20851820,16986510,14229191,11196730,9579677,7711194,6414824,5824715,4663228,3896542],[1097379,1052567,1048319,1003464,947154,946725,859488,791896,713346,687497,604397,542610],[5024279,4779736,4447100,4040587,3893888,3444165,3266740,3061743,2832961,2646248,2348174,2138093],[2961279,2967297,2844658,2573216,2520638,2216912,2178141,2178914,2183796,2009821,1790618,1797114],[10439388,9535483,8049313,6628637,5881766,5082059,4556155,4061929,3571623,3170276,2559123,2206287],[8631393,8001024,7078515,6187358,5346818,4648494,3966949,3318680,2677773,2421851,2309187,2061612],[3190369,3046355,2926324,2776755,2913808,2824376,2757537,2621073,2538268,2470939,2404021,2224771],[6177224,5773552,5296486,4781468,4216975,3922399,3100689,2343001,1821244,1631526,1449661,1295346],[989948,897934,783600,666168,594338,548104,446292,318085,266505,238380,223003,202322],[13002700,12702379,12281054,11881643,11863895,11793909,11319366,10498012,9900180,9631350,8720017,7665111],[9288994,8791894,8414350,7730188,7364823,7168164,6066782,4835329,4160165,4041334,3155900,2537167],[20201249,19378102,18976457,17990455,17558072,18236967,16782304,14830192,13479142,12588066,10385227,9113614],[1839106,1567582,1293953,1006749,943935,712567,667191,588637,524873,445032,431866,325594],[886667,814180,754844,696004,690768,665507,680514,652740,642961,692849,636547,583888],[3605944,3574097,3405565,3287116,3107576,3031709,2535234,2007280,1709242,1606903,1380631,1114756],[1377529,1316470,1235786,1109252,920610,737681,606921,533242,491524,465293,443083,430572],[4505836,4339367,4041769,3685296,3660777,3218706,3038156,2944806,2845627,2614589,2416630,2289905],[11799448,11536504,11353140,10847115,10797630,10652017,9706397,7946627,6907612,6646697,5759394,4767121],[6910840,6346105,5689283,4877185,4591120,3923687,3567089,3291718,2915841,2616556,2337885,2184789],[1793716,1852994,1808344,1793477,1949644,1744237,1860421,2005552,1901974,1729205,1463701,1221119],[689545,601723,572059,606900,638333,756510,763956,802178,663091,486869,437571,331069],[4657757,4533372,4468976,4219973,4205900,3641306,3257022,2683516,2363880,2101593,1798509,1656388],[21538187,18801310,15982378,12937926,9746324,6789443,4951560,2771305,1897414,1468211,968470,752619],[10711908,9687653,8186453,6478216,5463105,4589575,3943116,3444578,3123723,2908506,2895832,2609121],[5118425,4625364,4012012,3486703,3121820,2590516,2382594,2117027,1899804,1738765,1683724,1515400],[5706494,5303925,4919479,4375099,4075970,3804971,3413864,2982483,2792300,2563953,2387125,2075708],[1084225,989415,902195,799065,786690,694409,674767,591024,559456,537606,548889,376053],[779094,672591,642200,638800,652717,617761,632446,619636,641935,680845,646872,577056],[7151502,6392017,5130632,3665228,2718215,1770900,1302161,749587,499261,435573,334162,204354],[3271616,2763885,2233169,1722850,1461037,1059273,890627,688862,550310,507847,449396,373351],[1455271,1360301,1211537,1108229,964691,768561,632772,499794,423330,368336,255912,191909],[733391,710231,626932,550043,401851,300382,226167,128643,72524,59278,55036,64356]]
years = [2020, 2010, 2000, 1990, 1980, 1970, 1960, 1950, 1940, 1930, 1920, 1910]

start_year = 1910
end_year = 2020

num_states = len(states)
num_years = end_year - start_year + 1

# state_pop = [[0]*num_states for _ in range(num_years) ]
state_births = np.zeros((num_years, num_states))

for i, state in enumerate(states):
	spl = UnivariateSpline(years[::-1], census[i][::-1])

	for year in range(num_years):
		state_births[year][i] = spl(year+start_year) * birth_rate_func(year+start_year)

# with open('state_births.json', 'w') as f:
#     json.dump(state_pop.astype(int).tolist(), f)

print(state_births)

with open('state_births.dat', 'wb') as f:
	data = array.array('i', state_births.flatten().astype(int)) # pack data in 4-byte signed ints	
	f.write(data)	    


# xs = np.linspace(1910, 2020, 100)

# fig, ax = plt.subplots(1, 1, figsize=(6, 4))
# ax.plot(x, y, 'o')
# ax.plot(xs, spl(xs), 'g', lw=3)
# plt.show()